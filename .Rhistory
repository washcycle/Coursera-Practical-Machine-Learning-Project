(-4^2*0.2+1^2*0.8)
((-4)^2*0.2+(1)^2*0.8)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp
temp[1,]
temp[1,]*temp[2,]
sum(temp[1,]*temp[2,])
0.52*0.30 / (0.52*0.3+0.25*0.70)
1-0.52
0.75*0.30 / (0.75*0.3+0.48*0.70)
p <- c(.1, .2, .3, .4)
x <- 2 : 5
x
p
e = p*x
e
e = sum(p*x)
e = sum(p*x)
e
sum((p*x)^2) - sum(p*x)
sum((p*x)^2) - e
sum((p * x)^2) - e
(p*x)^2
sum((p*x)^2)
sum((p*x)^2) - e
sum((p*x)^2) - e^3
sum((p*x)^2) - e^2
sum((p*x)^2) - sum(p*x)^2
e
p*x
sum((p*x)^2) - sum(p*x)^2
sum((p*x)^2) - sum(p*x)^2
sum((p*x^2)) - sum(p*x)^2
rbind(x, p)
library(swirl)
library(swirl)
install.packages(swirl)
install.packages('swirl')
library(swirl)
swirl()
swirl()
install_from_swirl("Statistical Inference")
swirl()
4/36
1-3/36
deck
13*4
4/52
0
12/52
2/12
1-2/11
info()
1 - 2/51
2/51
2.4
1.6
0.64
0.64
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
460/5
(80/3+100/2)
(80/3+100/2)/2
80/3+100/2
(80/3+200/2)
(80/3+200/2)/2
(80/3+200/2)
(80*3/3+200/2)
(80*3/3+200/2)/92
(80*3/3+200/2)/2
(3*80+2*100)/5
80*3+2*100
440/2
440/5
(10+7+9+2+6+3+10+8)/8
7.5
83*7-6*81
5*543
8*4
8*543
9*543
0.543*0.985
9*53214
8*53214
0.53214*0.98
30.24/42
3024/72
3024/42
30.24/0.42
98*5
4*98
2*4
6*830
6*8
8*8
9*8
9*830
92*7
531.76/0.92
5+7
7+6
0.27634/41
0.09*180
16/180
180/9*100
8/24/100
(8/24)/100
24/8*100
4/50*100
52/(23+52+34+61+30)
13/20
7*7
100/7
49/2
49/100
7117/10000
1/8
289/5000
289/5000
289/3
289/4
289/12
289/10
289/11
289/9
289/8
289/7
289/45
6743/3
6743/4
6743/5
6743/8.
6743/89
929/2
926/2
926/2
swirl()
swirl()
library(swirl)
swirl()
coinPlot(10)
coinPlot(10000)
qnorm(0.975)
qnorm(0.95)
0.60 + c(-1,1) * qnorm(0.975)*sqrt(1/10)
0.60 + c(-1,1) * qnorm(0.975)*sqrt(0.6*0.4/10)
0.6 + c(-1,1) * qnorm(0.975)*sqrt(0.6*.4/10)
0.6 + c(-1,1) * qnorm(0.975)*sqrt(0.6*.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb <- 5/94.32
5 + c(-1,1)*qnorm(.975)*sqrt(5/94.32)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.text(5, 94.32)
poisson.test(5, 94.32)
poisson.test(5, 94.32)$conf
df <- data.frame(baseline = c(140, 138, 150, 148, 135), week2 = c(132, 135, 151, 146, 130))
t.test(df$baseline - df$week2)
t.test(df$baseline - df$week2)$p.value
load(mtcars)
load(mtcars)
mtcars
qnorm(0.05)
1100 - qnorm(0.05)*30/sqrt(9)
1100 - qnorm(0.05)*30/sqrt(9)
1100 - qnorm(0.975)*30/sqrt(9)
1100 + c(1,-1) qnorm(0.975)*30/sqrt(9)
1100 + c(1,-1)*qnorm(0.975)*30/sqrt(9)
mt4 <- mtcars[mtcars$cyl == 4,mpg]
mt4 <- mtcars$mpg[mtcars$cyl == 4]
mt6 <- mtcars$mpg[mtcars$cyl == 6]
t.test(mt4,mt6)
round(pbinom(4, prob = .5, size = 5, lower.tail = FALSE),4
4
round(pbinom(4, prob = .5, size = 5, lower.tail = FALSE)
)
round(pbinom(4, prob = .5, size = 5, lower.tail = FALSE))
pbinom(4, prob = .5, size = 5, lower.tail = FALSE)
pbinom(3, prob = .5, size = 4, lower.tail = FALSE)
3.0 + c(1,-1) * qnorm(0.975)*1.1/sqrt(100)
pbinom(4, prob = .5, size = 5, lower.tail = FALSE)
pmpr,(4, prob = .5, size = 5, lower.tail = FALSE)
pnorm(4, prob = .5, size = 5, lower.tail = FALSE)
ppois(4, prob = .5, size = 5, lower.tail = FALSE)
ppois(10/1787, 1/100 lower.tail = FALSE)
ppois(10/1787, 1/100, lower.tail = FALSE)
ppois(520, 1580/30, lower.tail = FALSE)
ppois(520, 30/1580, lower.tail = FALSE)
ppois(1580-1, 520*30, lower.tail = FALSE)
ppois(1580-1, lambda = 520*30, lower.tail = FALSE)
ppois(15800-1, lambda = 520*30, lower.tail = FALSE)
ppois(10-1, 1*1787, lower.tail = FALSE)
ppois(10-1, 1*1787/100, lower.tail = FALSE)
ppois(10-1, 1787/100, lower.tail = FALSE)
ppois(10, 1787/100, lower.tail = FALSE)
ppois(10, 1787*100, lower.tail = FALSE)
ppois(10, 1787/100, lower.tail = FALSE)
ppois(10-1, 1787/100, lower.tail = FALSE)
pbinom(4, prob = .5, size = 5, lower.tail = FALSE)
pbinom(3, prob = .5, size = 4, lower.tail = FALSE)
pbinom(2, prob = .5, size = 4, lower.tail = FALSE)
ppois(10-1, 1787/100, lower.tail = FALSE)
ppois(10-1, 1787/100, lower.tail = FALSE)
ppois(10-1, 1787/100, lower.tail = T)
ppois(10-1, 1787/100, lower.tail = F)
ppois(10-1, 1787/100, lower.tail = F)
ppois(10-1, 1/100*1787, lower.tail = F)
1- ppois(10-1, 1/100*1787, lower.tail = F)
round(ppois(10-1, 1/100*1787, lower.tail = F))
round(ppois(10-1, 1/100*1787, lower.tail = F),2)
round(ppois(10-1, 1/100*1787, lower.tail = T),2)
1/100
round(ppois(10-1, 1/100*1187, lower.tail = T),2)
round(ppois(10-1, 1/100*1187, lower.tail = T),2)
poisson.test(10, 1787/100, 1/100)
poisson.test(10, 1787/100, 1/100,alternative = 'less')
poisson.test(10, 1787, 1/100,alternative = 'less')
poisson.test(10, 1787, 1/100, alternative = 'less')
round(ppois(10-1, 1/100*1187, lower.tail = T),2)
round(ppois(10-1, 1/100*1787, lower.tail = T),2)
round(ppois(10-1, 1/100*1787, lower.tail = T),2)
round(ppois(10-1, 1/100*1787, lower.tail = F),2)
round(ppois(10, 1/100*1787, lower.tail = F),2)
round(ppois(10, 1/100*1787, lower.tail = T),2)
t.test(-3,1)
m1 = -3
m2 = 1
mdiff = m1-m2
se = 1.65 * sqrt(1/9 + 1/9)
z = diff /se
z = mdiff /se
z
pnorm(z)
2 * pnorm(z)
1-90
1- .90
qnorm(.975)
0.01 + qnorm(.975) * 0.04/sqrt(100)
0.01 + qnorm(.95) * 0.04/sqrt(100)
pnorm(0.01 + qnorm(1 - 0.05)/sqrt(100), mean = 0, sd = 0.04/sqrt(100))
pnorm(0.01 + qnorm(1 - 0.05)/sqrt(100), mean = 0, sd = 0.04/sqrt(100), lower.tail = F)
pnorm(0.01 + qnorm(1 - 0.05)/sqrt(100), mean = 0.01, sd = 0.04/sqrt(100), lower.tail = F)
pnorm(0.01 + qnorm(1 - 0.05)*0.04/sqrt(100), mean = 0.01, sd = 0.04/sqrt(100), lower.tail = F)
pnorm(0.01 + qnorm(1 - 0.05)*0.04/sqrt(100), mean = 0, sd = 0.04/sqrt(100), lower.tail = F)
pnorm(0.01 + qnorm(1 - 0.05)*0.04/sqrt(100), mean = 0, sd = 0.04/sqrt(100), lower.tail = T)
pnorm(0.01 + qnorm(1 - 0.05)*0.04/sqrt(100), mean = 0, sd = 0.04/sqrt(100), lower.tail = F)
(0.01 - 0)/(0.04/sqrt(100))
(0.01 - 0)/(0.04/sqrt(100))
sqrt(n)(0.01-0)/0.04
sqrt(100)*(0.01-0)/0.04
mu0 <- 0.01
mu1 <- 0
sigma <- 0.04
n <- 100
alpha <- 0.05
z <- qnorm(1 - alpha)
pnorm(mu0 + z * sigma / sqrt(n), mean = mu1, sd = sigma/sqrt(n), lower.tail = F)
sqrt(100)*(0-0.01)/0.04
pnorm(1.645*0.04/sqrt(100), mean = 0.01, sd = 0.04/sqrt(100), lower.tail = F)
pnorm(1.645*0.04/sqrt(160), mean = 0.01, sd = 0.04/sqrt(160), lower.tail = F)
pnorm(1.645*0.04/sqrt(120), mean = 0.01, sd = 0.04/sqrt(120), lower.tail = F)
pnorm(1.89*0.04/sqrt(120), mean = 0.01, sd = 0.04/sqrt(120), lower.tail = F)
1100 + c(1,-1) * qnorm()
tn
1100 + c(1,-1) * 2 * 30/sqrt(9)
1100 + c(1,-1) * 30/sqrt(9)
1100 + c(1,-1)  2 * 30/sqrt(9)
library(swirl)
swirl()
g1
range(g1)
g2
range(g2)
g1-g2
difference <- g1-g2
difference <- g2-g1
mean(difference)
sd(difference)
s <- sd(difference)
1.58 + c(-1, 1) * qt(0.975, 9)*1.229995/sqrt(10)
mn + c(-1, 1) * qt(0.975, 9)*s/sqrt(10)
t.test(g1, g2)$conf.int
t.test(difference)$conf.int
sp <- (80-1)*(15.34)^2 + (21-1)*(132.86)^2
sp <- (8-1)*(15.34)^2 + (21-1)*(132.86)^2
sp <- (8-1)*(15.34)^2 + (21-1)*(18.23)^2
ns <- (8-1)+(21-1)
sp <- sqrt(sp/ns)
132.86 + c(-1, 1) * qt(0.975, ns) * sp
132.86-127.44 + c(-1, 1) * qt(0.975, ns) * sp
132.86-127.44 + c(-1, 1) * qt(0.975, ns) * sp * sqr(1/8+1/21)
132.86-127.44 + c(-1, 1) * qt(0.975, ns) * sp * sqrt(1/8+1/21)
var(g1,g2)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1, 1) * sp * sqrt(1/10+1/10)
md + c(-1, 1) * qt(0.975, 18) * sp * sqrt(1/10+1/10)
t.test(g1,g2)
t.test(g1,g2)$conf
t.test(g1,g2, paired = F, var.equal = TRUE)$conf
t.test(g1,g2, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
127.44-132.86 + c(-1, 1) * qt(0.975, 27) * sqrt(18.23^2/8 + 15.34/21)
num <-(18.23^2/8 + 15.34/21)^2
num <-(18.34^2/8 + 15.34/21)^2
num <-(15.34/21 + 18.34^2/8)^2
num <-(15.34/8 + 18.34^2/21)^2
num <-(15.34/8 + 18.23^2/21)^2
num <-(15.34^@/8 + 18.23^2/21)^2
num <-(15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)^2/(8 - 1)  + (18.23^2/21)^2 / (21 - 1)
mydf <- num/den
127.44-132.86 + c(-1, 1) * qt(0.975, mydf) * sqrt(18.23^2/8 + 15.34/21)
132.86 - 127.44 + c(-1, 1) * qt(0.975, mydf) * sqrt(18.23^2/8 + 15.34/21)
132.86 - 127.44 + c(-1, 1) * qt(0.975, mydf) * sqrt(15.34^2/8 + 18.23/21)
132.86 - 127.44 + c(-1, 1) * qt(0.975, mydf) * sqrt(15.34^2/8 + 18.23^2/21)
clear
clear()
install.packages(c("chron", "knitr", "manipulate", "markdown", "plyr", "rmarkdown", "scales", "stringr", "testthat", "XML"))
install.packages(c("chron", "knitr", "manipulate", "markdown",
)
""
install.packages(c("chron", "knitr", "manipulate", "markdown", "plyr", "rmarkdown", "scales", "stringr", "testthat", "XML"))
restart R
restart
install.packages(c("httr", "manipulate", "R6", "RCurl", "stringi", "XML"))
library(swirl)
library('swirl')
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages(stringi)
install.packages("stringi")
library(swirl)
R
version()
library(swirl)
library(swirl)
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 3) ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
fit$residuals
sumary(fit)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varRes, varEst)
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag + dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
predict(fit, data.frame(wt = 3), interval = "confidence", level=0.95)
predict(fit, data.frame(wt = mean(mtcars$wt)), interval = "confidence", level=0.95)
beta0 = coef(summary(fit))[1]
beta1 = coef(summary(fit))[2]
beta1
beta0
beta0 + beta1*mean(mtcars$) c(-1, 1) * qt(0.95, fit$df)
beta0 + beta1*mean(mtcars$) + c(-1, 1) * qt(0.95, fit$df)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df)
summary(fit)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 0.5591
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df)*0.2
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df)*0.1
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * sqrt(1/n + 1.8776)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * sqrt(1/n + 0.5591)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df)
sfit <- summary(fit)
sfit
sfit$sigma
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046 * 0
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046 * 0.5591
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046 * 1.8776
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046 * sqrt(1/30 + 0.5591)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046 * sqrt(1/30 + (mtcars$wt - mean(mtcars$wt))^2)
(mtcars$wt - mean(mtcars$wt))^2
(mtcars$wt - mean(mtcars$wt))^2/sum((mtcars$wt - mean(mtcars$wt))^2)
(mean(mtcars$wt) - mean(mtcars$wt))^2/sum((mtcars$wt - mean(mtcars$wt))^2)
(mean(mtcars$wt) - mean(mtcars$wt))^2 / sum((mtcars$wt - mean(mtcars$wt))^2)
sqrt(1/30 + (mean(mtcars$wt) - mean(mtcars$wt))^2/sum((mtcars$wt - mean(mtcars$wt))^2))
SE <- sqrt(1/30 + (mean(mtcars$wt) - mean(mtcars$wt))^2/sum((mtcars$wt - mean(mtcars$wt))^2))
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 3.046 * 0.1825742
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 0.1825742
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * sqrt(1/32)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.95, fit$df) * 0.55 * sqrt(1/32)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * sqrt(1/32)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * sqrt(1+1/32)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * sqrt(1/32)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * sqrt(1/30)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * sqrt(1/32)
beta0 + beta1*mean(mtcars$wt)
beta0 + beta1*mean(mtcars$wt)
predict(fit, data.frame(wt = mean(mtcars$wt)))
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * sqrt(1/32)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) *1.8
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) *1
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) *2
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df)
qt(0.975, fit$df)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * 0.55
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * 0.5536
summary(fit)
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * 0.5591
beta0 + beta1*mean(mtcars$wt) + c(-1, 1) * qt(0.975, fit$df) * 3.046 * sqrt(1/32)
rm(list = ls())
library(swirl)
install.packages("swirl")
load("/data/Development/R/practical_machine_learning/.RData")
load("/data/Development/R/practical_machine_learning/.RData")
load("/data/Development/R/practical_machine_learning/course_project/.RData")
predict(modelFit, newdta=test_)
predict(modelFit, newdta=test_ %>% select(-classe))
predict(modelFit, newdta= (test_ %>% select(-classe)))
predict(modelFit, newdata= (test_ %>% select(-classe)))
predict(modelFit, newdata= test_)
confusionMatrix(predictions, test_$classe)
confusionMatrix(predictions, test_$classe)
library(caret)
library(randomForest)
library(doMC)
confusionMatrix(predictions, test_$classe)
predictions <- predict(modelFit, newdata= test_)
confusionMatrix(predictions, test_$classe)
plot()
cm
confuse <- confusionMatrix(predictions, test_$classe)
plot(confuse)
table(confuse)
table(confuse$table)
confuse$table
save(c("modelFit"), file = "project_data.R")
save(c(modelFit), file = "project_data.R")
?save
save(modelFit, file = "project_data.R")
save(training_raw, training, training_, test_, modelFit, file = "project_data.R")
setwd("/data/Development/R/practical_machine_learning/course_project")
save(training_raw, training, training_, test_, modelFit, file = "project_data.R")
?ktable
library(knitr)
?ktable
??ktable
kable(confuse)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
answers = rep("A", 20)
answers
source('~/.active-rstudio-document', echo=TRUE)
source('/data/Development/R/practical_machine_learning/course_project/clean_data_validation.R', echo=TRUE)
source('/data/Development/R/practical_machine_learning/course_project/clean_data_validation.R', echo=TRUE)
source('/data/Development/R/practical_machine_learning/course_project/clean_data_validation.R', echo=TRUE)
source('/data/Development/R/practical_machine_learning/course_project/clean_data_validation.R', echo=TRUE)
validation_raw
colSums(is.na(validation))
validation
validation_raw <- fread("validation.csv", sep = ",", header = T)
## assign data that summarizes each event window
validation <- validation_raw %>% select(names(training_))
library(dplyr)
validation_raw <- fread("validation.csv", sep = ",", header = T)
## assign data that summarizes each event window
validation <- validation_raw %>% select(names(training_))
names(training_)
validation <- validation_raw %>% select(c(names(training_)))
validation_raw <- fread("validation.csv", sep = ",", header = T)
## assign data that summarizes each event window
validation <- validation_raw[, names(training_), with = F]
validation_raw <- fread("validation.csv", sep = ",", header = T)
## assign data that summarizes each event window
validation <- validation_raw[, names(training_[,-53]), with = F]
validation
validation <- validation_raw[, names(training_[,-53]), with = F]
predictions <- predict(modelFit, newdata= validation)
predictions
pml_write_files(predictions)
